#!/usr/bin/env bash
DNS_SERVER=proj4-dns.5700.network
DNS_DIR='dns_server'
HTTP_REPLICAS=(proj4-repl1.5700.network,
               proj4-repl2.5700.network,
               proj4-repl3.5700.network,
               proj4-repl4.5700.network,
               proj4-repl5.5700.network,
               proj4-repl6.5700.network,
               proj4-repl7.5700.network)
HTTP_DIR='http_server'

while getopts p:o:n:u:i: flag
do
    case "${flag}" in
        p) port=${OPTARG};;
        o) origin=${OPTARG};;
        n) name=${OPTARG};;
        u) username=${OPTARG};;
        i) keyfile=${OPTARG};;
    esac
done

# DNS server deployment
echo "Deploying DNS server..."
echo "Cleaning up any existing directories/files"
ssh -i $keyfile $username@$DNS_SERVER "rm -rf ~/$DNS_DIR; mkdir ~/$DNS_DIR/"
echo "Copying DNS files..."
scp -i $keyfile dnsserver utils.py $username@$DNS_SERVER:~/$DNS_DIR/
echo "Successfully deployed DNS Server: $username@$DNS_SERVER"

# CDN replica deployment
echo "Deploying CDN replicas..."
for replica in "${HTTP_REPLICAS[@]}"
do
	echo "Deploying Replica: $username@$replica...."
	echo "Cleaning up existing directories..."
	ssh -i $keyfile $username@$replica "rm -rf ~/$HTTP_DIR; mkdir ~/$HTTP_DIR/"
	echo "Copying server file..."
	scp -i $keyfile httpserver utils.py pageviews.csv build_cache.py cache.py $username@$replica:~/$HTTP_DIR/
	echo "Fetching articles for caching"
	ssh -i $keyfile $username@$replica "cd $HTTP_DIR; python3 build_cache.py -o $origin"
	echo "Cache built"
	echo "Deployment complete for replica: $username@$replica\n"
done
echo "All replicas deployed!"