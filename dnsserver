#!/usr/bin/env python3
import argparse
from random import randrange

from dnslib.dns import RR
from dnslib.server import DNSServer, DNSLogger, DNSError

from utils import get_local_ip

DNS_SERVER = "localhost"  # "proj4-dns.5700.network"
DNS_SERVER_IP = "97.107.140.73"

CDN_NAME = "cs5700cdn.example.com"
TTL = 60


class Resolver:
    CLIENT_IPS: set = set()

    @staticmethod
    def resolve(request, handler):
        if request.q.qname == CDN_NAME:
            Resolver.CLIENT_IPS.add(handler.client_address)
            response = request.reply()
            random_replica = randrange(len(Resolver.REPLICAS))
            replica_domain_name, replica_ip = Resolver.REPLICAS[random_replica]
            response.add_answer(
                *RR.fromZone(f"{replica_domain_name}. {TTL} A {replica_ip}"))
            return response

        raise DNSError(f"Not authoritative for {request.q.qname}")


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-p", type=int, help="the port number the server will bind to")
    parser.add_argument(
        "-n", type=str, help="the CDN-specific name that the server translates to an IP.")
    args = parser.parse_args()
    return args


def main():
    global CDN_NAME
    args = parse_args()
    port = args.p
    CDN_NAME = args.n
    resolver = Resolver()
    logger = DNSLogger(prefix=False)
    server = DNSServer(resolver, logger=logger,
                       port=port, address=get_local_ip())
    try:
        server.start()
    except KeyboardInterrupt:
        pass
    server.stop()
    print("Server stopped")


if __name__ == "__main__":
    main()
