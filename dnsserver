#!/usr/bin/env python3
import argparse
from dnslib.server import DNSServer, DNSLogger, DNSError
from dnslib.dns import RR

DNS_SERVER = "localhost"  # "proj4-dns.5700.network"
DNS_SERVER_IP = "97.107.140.73"

CDN_NAME = "cs5700cdn.example.com"
TTL = 60

REPLICAS = [
    ("proj4-repl1.5700.network", "139.144.30.25"), 
]


class Resolver:
    @staticmethod
    def resolve(request, handler):
        if request.q.qname == CDN_NAME:
            response = request.reply()
            replica_domain_name, replica_ip = REPLICAS[0]
            response.add_answer(*RR.fromZone(f"{replica_domain_name}. {TTL} A {replica_ip}"))
            return response
        
        raise DNSError(f"Not authoritative for {request.q.qname}")


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", type=int, help="the port number the server will bind to")
    parser.add_argument("-n", type=str, help="the CDN-specific name that the server translates to an IP.")
    args = parser.parse_args()
    return args


def main():
    global CDN_NAME
    args = parse_args()
    port = args.p
    CDN_NAME = args.n
    resolver = Resolver()
    logger = DNSLogger(prefix=False)
    server = DNSServer(resolver, logger=logger, port=port, address=DNS_SERVER)
    try:
        server.start()
    except KeyboardInterrupt:
        pass
    server.stop()
    print("server stopped")


if __name__ == "__main__":
    main()
