#!/usr/bin/env python3
import argparse
import asyncio
import csv
import time

import aiohttp

HTTP_PORT = 25016

REPLICAS = [
    "139.144.30.25",
    "173.255.210.124",
    "139.144.69.56",
    "185.3.95.25",
    "139.162.83.107",
    "192.46.211.228",
    "170.187.240.5",
]


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("-r", type=int, help="the # of the replica to check", required=True)
    args = parser.parse_args()
    return args


async def get_article(session: aiohttp.ClientSession, replica_ip: str, article: str, errors: list, lock: asyncio.Lock):
    url = f"http://{replica_ip}:{HTTP_PORT}/{article}"
    async with session.get(url) as resp:
        if resp.status != 200:
            async with lock:
                errors.append((article, resp.status))


async def main():
    args = parse_args()
    replica_ip = REPLICAS[args.r - 1]

    async with aiohttp.ClientSession() as session:
        lock = asyncio.Lock()
        tasks = []
        errors = []

        with open("pageviews.csv") as article_file:
            reader = csv.DictReader(article_file)
            for row in reader:
                article = row["article"].replace(" ", "_")
                tasks.append(asyncio.ensure_future(get_article(session, replica_ip, article, errors, lock)))

        result = await asyncio.gather(*tasks)
        print(result)


if __name__ == '__main__':
    start_time = time.time()
    asyncio.run(main())
    print("--- %s seconds ---" % (time.time() - start_time))
